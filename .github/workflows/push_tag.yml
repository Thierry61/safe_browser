on:
  push:
    tags: # Sequence of patterns
      - sv*
name: Generate and Upload Release Assets
jobs:
  create:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Get Tag Version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -c11-)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false # Otherwise release is not applied on the tag created by user
          prerelease: true
      - name: Persist Data
        shell: bash
        run: printf "${{ steps.get_version.outputs.VERSION }}\t${{ steps.create_release.outputs.upload_url }}" > release-data.txt
      - name: Upload Persisted Data
        uses: actions/upload-artifact@v1
        with:
          name: release-data
          path: release-data.txt
  update:
    name: Update Release
    runs-on: ${{ matrix.os }}
    needs: create
    env:
      target_dir: target/${{ matrix.target }}/release
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        include:
          - os: ubuntu-latest
            extension: linux-x64.AppImage
          - os: windows-latest
            extension: win-x64.exe
          - os: macos-latest
            extension: mac-x64.dmg
    steps:
      - name: Download Persisted Data
        uses: actions/download-artifact@v1
        with:
          name: release-data

      - name: Get Tag Version
        id: get_version
        shell: bash
        # Remove "sv" prefix because yarn version doesn't accept it and add .0 suffix for semver needed by yarn
        run: echo ::set-output name=VERSION::$(cut -f 1 release-data/release-data.txt | cut -c3-)'.0'

      - name: Get Upload URL
        shell: bash
        id: get_upload_url
        run: echo ::set-output name=UPLOAD_URL::$(cut -f 2 release-data/release-data.txt)

      - name: Set Artifact File Name
        shell: bash
        # Note "v" (instead of "sv") prefix generated by yarn
        run: echo ::set-env name=artifact_file::safe-browser-v${{ steps.get_version.outputs.VERSION }}-${{ matrix.extension }}

      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Install
        run: yarn install --ignore-engines --network-timeout 800000;

      # Add "sv" prefix back (but it doesn't seem to impact artifact name)
      - run: yarn config set version-tag-prefix "sv"
      - run: yarn config set version-git-tag false

      - name: Release preparation
        run: yarn version --new-version ${{ steps.get_version.outputs.VERSION }}

      - name: Package Release
        run: yarn package

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_upload_url.outputs.UPLOAD_URL }}
          asset_path: ./release/${{ env.artifact_file }}
          asset_name: ${{ env.artifact_file }}
          asset_content_type: application/octet-stream
